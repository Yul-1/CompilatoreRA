risk_id: "RISK-005"
asset: "Configurazione SSH"
vulnerability: "Le configurazioni standard aumentano la probabilità di un attaccante di avere successo."
threat_actor_vector: "Le configurazioni standard aumentano la probabilità di un attaccante di avere successo."
category: "Access Control"

justification: |
  Le configurazioni SSH standard aumentano significativamente la probabilità di successo per un attaccante.
  Il server risulta esposto su porta 22 con configurazioni predefinite che facilitano attacchi brute force e 
  compromissioni del sistema.

mitigation:
  treatment: "Mitigare"
  summary: "Disabilitare l'accesso root da SSH, impostare regole per indirizzi permessi, usare una chiave ellittica, cambiare la porta predefinita."
  steps: |
    È buona pratica eseguire un backup delle configurazioni critiche:
    `sudo cp /etc/ssh/sshd_config /etc/ssh/sshd_config.backup.$(date +%Y%m%d_%H%M%S)`

    Creare una coppia di chiavi di autenticazione ellittiche (Ed25519):
    `sudo mkdir -p /etc/ssh/hardened_keys`
    `sudo ssh-keygen -t ed25519 -f /etc/ssh/hardened_keys/ssh_host_ed25519_key -N ""`

    Creare un banner di avvertimento legale:
    `sudo nano /etc/ssh/ssh_banner.txt`

    Aprire il file di configurazione `sudo nano /etc/ssh/sshd_config` e apportare le seguenti modifiche:
    * Cambio porta da 22 a 2222.
    * Disabilitare il root login.
    * Restrizioni di accesso solo ad utenti permessi.
    * Indicare il path per le chiavi ellittiche e il banner.
    * Impostare soluzioni di hardening (limite tentativi, sessioni, etc.).
    * Abilitare logging verbose.
    
    Verificare la correttezza della sintassi:
    `sudo sshd -t`

    Riavviare il servizio SSH:
    `sudo systemctl reload ssh`

    Una volta verificato il funzionamento, rimuovere la regola per la vecchia porta:
    `sudo ufw delete allow 22/tcp`

    Per un'ulteriore protezione, installare e configurare fail2ban per bloccare tentativi di accesso falliti.